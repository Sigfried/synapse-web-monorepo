import{v as o}from"./VerificationSubmission-CDh9xETu.js";import{g as u,be as d,bf as l,B as f,bg as S,M as O}from"./useFiles-BcD6mDi5.js";import"./StringUtils-CsrYFBZo.js";import{h as i,H as n}from"./index-DxbH5xJI.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-7Rd-3y_y.js";import"./SynapseConstants-CuH4EvWV.js";import"./OrientationBanner-B5vwTCSF.js";import"./index-ByDPjhyE.js";import"./index-DKKtAZ-r.js";import"./iframe-DHBzvjMn.js";import"./spreadSx-CwcO6WA9.js";import"./react-BOzROmgg.js";import"./FullWidthAlert-BVCDY_WF.js";import"./Alert-DVKPmL2c.js";import"./createTheme-weg6St2J.js";import"./DefaultPropsProvider-6HFieHvH.js";import"./useSlot-YaRprXS4.js";import"./useForkRef-DA0JCaig.js";import"./createSimplePaletteValueFilter-BkuG7aud.js";import"./createSvgIcon-BGg5g9xB.js";import"./Close-BOWxSU3U.js";import"./IconButton-C0OkJe-t.js";import"./useTimeout-BoWMwTx9.js";import"./ButtonBase-B2bV2unA.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Bo5xYfHW.js";import"./Paper-Bye4GGTl.js";import"./useTheme-D-jV5p9_.js";import"./useTheme-Bp6LTlc2.js";import"./Stack-VRYrOX_U.js";import"./extendSxProp-eejbSBw0.js";import"./getThemeProps-B8_dbwk8.js";import"./Box-DAS4gAwR.js";import"./AlertTitle-CEoonoL2.js";import"./Typography-Cz1DXd3f.js";import"./index-DqrkK-rf.js";import"./ClickAwayListener-HdErrwu6.js";import"./getReactElementRef-CtQVAZBh.js";import"./index-BA0-QIIf.js";import"./index-Cehzy2HW.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D8H2VkPk.js";import"./Tooltip-Cuinm23w.js";import"./index-ClZRNHk7.js";import"./useControlled-Dz5f7ynF.js";import"./Popper-D0j-uuqm.js";import"./Button-8IdYFkw2.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BktRTQ2F.js";import"./QueryClientProvider-6PiXRtty.js";import"./Link-CECxE1RT.js";import"./Collapse-cu6l3OU-.js";import"./_baseUniq-CifI_7OE.js";import"./_Uint8Array-BHsGeMbi.js";import"./isArray-BvigYMNm.js";import"./_getTag-CmhvfjQ5.js";import"./isEqual-BeAHmh4j.js";import"./merge-hOmmKQDu.js";import"./_initCloneObject-D_Tsr352.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-DRP9B8ad.js";import"./inputBaseClasses-DuUB6SLR.js";import"./calculateFriendlyFileSize-Oa-_BaTd.js";import"./CheckCircleTwoTone-BDZa1VLf.js";import"./InfoTwoTone-BSwoo1wT.js";import"./useMutation-GGlNtriB.js";import"./dayjs.min-B-M6F0eK.js";import"./chunk-AYJ5UCUI-C3h45_Au.js";import"./cloneDeep-xKjQPfDD.js";import"./Skeleton-CSoBRdb-.js";import"./SkeletonButton-DGAtNasd.js";import"./SkeletonInlineBlock-CzGAC19n.js";import"./SkeletonTable-CMFM-LOQ.js";import"./times-Cb-dRUhg.js";import"./toInteger-WLNWDGcm.js";import"./isSymbol-dlNtCU4w.js";import"./SkeletonParagraph-DKghjkvU.js";import"./MarkdownSynapse-GOfgSeqp.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
