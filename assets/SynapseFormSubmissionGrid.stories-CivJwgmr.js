import{j as l}from"./jsx-runtime-BqO-iuVy.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-C162rJDn.js";import{aF as S,M as a}from"./useFiles-D80UDFDi.js";import"./OrientationBanner-DIfeGUHQ.js";import"./index-BcOyY2QV.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-wPQzKeVS.js";import{S as E}from"./SynapseFormSubmissionGrid--UlfG2vL.js";import"./mockSchema-4igjBBFX.js";import"./mockFileEntity-4H_bKzmr.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-BjIrqlMv.js";import"./mockTeam-NOV5aOaw.js";import"./SynapseConstants-CtWFkQpu.js";import"./uniqueId-DNomkPZQ.js";import"./toString-DFp-4_JY.js";import"./isObjectLike-Dmc98XBp.js";import"./iframe-Bh2p-vNT.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DVztqdZc.js";import"./times-CS_FMqLF.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-ClP0l_IV.js";import"./asyncJobHandlers-BAK_ioi6.js";import"./BasicMockedCrudService-Y9XBnQzt.js";import"./cloneDeep-Chvwiiio.js";import"./_Uint8Array-Bf9XXrXp.js";import"./_initCloneObject-Cb95POZf.js";import"./_getTag-Pm5IyvEt.js";import"./isEqual-Bhmiqh_7.js";import"./_baseIsEqual-WJTYYJPL.js";import"./mockAnnotationColumns-B84NDr5Y.js";import"./tableQueryHandlers-B9_RoO05.js";import"./omit-BRk8ufmA.js";import"./_baseGet-Dz_suq0O.js";import"./isNil-DLIXSOUW.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-qE8jpCOu.js";import"./_baseFlatten-Ckk1IbbC.js";import"./pick-DX_ehAPz.js";import"./_baseSet-vQjn_nKH.js";import"./hasIn-Cx422zf6.js";import"./accessRequirementAclHandlers-C4QWXmyM.js";import"./mockAccessRequirementAcls-C0L1Ozdl.js";import"./mockAccessRequirements-UXqAQmnV.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-PO48t_TJ.js";import"./wikiHandlers-qrBhjWpb.js";import"./mockWikiPageKey-C2MFK-3J.js";import"./teamHandlers-BY1WIAQZ.js";import"./dataAccessRequestHandlers-DpVZMtVN.js";import"./MockResearchProject-DozrHiOX.js";import"./mock_discussion-L_IY6mOI.js";import"./fakerUtils-B6aaKpVY.js";import"./index-DrDJaojp.js";import"./mockTableEntity-DzhsGMUl.js";import"./mockFileEntityACLVariants-C5n9_UTl.js";import"./entityHandlers-DZTUn30B.js";import"./mockEntity-DnO0rJx6.js";import"./mockEvaluationQueue--mVpISOS.js";import"./featureFlagHandlers-BkhscXh7.js";import"./fileHandlers-Dq0HRv1t.js";import"./personalAccessTokenHandlers-DbP0d_7W.js";import"./researchProjectHandlers-B0JtmI1u.js";import"./resetTwoFactorAuthHandlers-CH6dRi_f.js";import"./userProfileHandlers-BSzMRksj.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-COcknZIw.js";import"./FullWidthAlert-BKm-9K_K.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DLskJ11x.js";import"./createTheme-BasOYX09.js";import"./resolveComponentProps-9jJb7j70.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-u25dvnm0.js";import"./createSvgIcon-kNxhhy-4.js";import"./DefaultPropsProvider-W2w29CWU.js";import"./Close-9tUGQ-OR.js";import"./IconButton-BkJCRybf.js";import"./ButtonBase-Dp-5Dhv3.js";import"./useTimeout-CABxWF3d.js";import"./useIsFocusVisible-BFAgZ8HY.js";import"./useEventCallback-_3OO-Ipg.js";import"./Paper-Br4XBsRn.js";import"./Stack-Z4nRxCTh.js";import"./getThemeProps-Bfdly5RN.js";import"./useTheme-BNbntlTJ.js";import"./Box-B3jpuCda.js";import"./AlertTitle-BFG-P4r0.js";import"./Typography-DAjiZ_xI.js";import"./useTheme-BofQKqFc.js";import"./Grow-D1CTbLEZ.js";import"./index-C8lNjrK_.js";import"./utils-BII8Tvgr.js";import"./ClickAwayListener-BCP9XusX.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Cf02A0pO.js";import"./index-BeqSI264.js";import"./useControlled-B9DHkS_B.js";import"./useId-CkqhwJly.js";import"./Popper-BTDaJ5UU.js";import"./Button-CoQQCGSE.js";import"./useQuery-B96gi7hz.js";import"./utils-B03kWwN1.js";import"./Link-2UUBj7cB.js";import"./Collapse-Dcuc3nhT.js";import"./tinycolor-Begke6kS.js";import"./Fade-L9UW7S_H.js";import"./Skeleton-AT9sFP93.js";import"./inputBaseClasses-Dwrc9xkY.js";import"./calculateFriendlyFileSize-B1IEj0uH.js";import"./CheckCircleTwoTone-C7M6RRZJ.js";import"./InfoTwoTone-3qarNFAR.js";import"./useMutation-DFN3r0Uo.js";import"./dayjs.min-DGOzjR9y.js";import"./chunk-AYJ5UCUI-D2VM_hpJ.js";import"./index-Cbraa0eh.js";import"./react-Bx-O84Kc.js";import"./util-jeQTgTGe.js";import"./WideButton-DerH5_D6.js";import"./DeleteTwoTone-C5Gi8G29.js";import"./createSvgIcon-CFmsotl2.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-zm0Svarf.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BDkblk1c.js";import"./DialogBase-mmbSXNIz.js";import"./Close-CY_IeWCK.js";import"./HelpPopover-AGHS0ecF.js";import"./MarkdownPopover-36k8NdM9.js";import"./LightTooltip-HqXeVbx5.js";import"./MarkdownSynapse-C6DZasHI.js";import"./SkeletonButton-CRH-poll.js";import"./SkeletonInlineBlock-DZf0tiZK.js";import"./SkeletonTable-D9thCSli.js";import"./SkeletonParagraph-DB-CZiig.js";import"./HelpOutlineTwoTone-C0zQbedp.js";import"./DialogTitle-B5ZCBNiF.js";import"./DialogContent-4hhPqwa6.js";import"./Dialog-D1ogi_ft.js";import"./Modal-giNgMP6G.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-bE9l5r6N.js";import"./WarningDialog-BUQMuvwD.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
