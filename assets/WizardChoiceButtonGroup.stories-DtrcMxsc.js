import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{W as m,a as t}from"./WizardChoiceButton-B7cV4kVM.js";import{I as l}from"./LayersTwoTone-DnwDYN_U.js";import{F as d}from"./IconSvg-CjSX6ggy.js";import"./Box-CkbFs_a4.js";import"./createTheme-B26sKtvN.js";import"./index-Dcva6Igs.js";import"./iframe-CCoJg556.js";import"./useTheme-CCL95tAL.js";import"./extendSxProp-BVfK8pxE.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-CwvWcdql.js";import"./index-hLcTFsES.js";import"./DefaultPropsProvider-YJnmDfI4.js";import"./createSimplePaletteValueFilter-DNddmZR9.js";import"./createSvgIcon-BEKnxyJh.js";import"./useTheme-chxq-tHR.js";import"./Tooltip-C31LWaVV.js";import"./index-37XzZJ7t.js";import"./useSlot-Rmgo1ffi.js";import"./useForkRef-DBtevC74.js";import"./useTimeout-C8GfIPaa.js";import"./useControlled-BLD8yqHo.js";import"./getReactElementRef-7JBTpt97.js";import"./index-CJdyCa67.js";import"./index-DBA9oQSP.js";import"./Grow-ADuAH2zU.js";import"./Popper-B9lMpEBY.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-CcO5AUPc.js";import"./HelpOutlineTwoTone-BNYL4yqC.js";import"./ErrorOutlined-BRuzVwTz.js";import"./GetAppTwoTone-CI2kaP6i.js";import"./InfoOutlined-DIwjafnr.js";import"./PhoneTwoTone-B0YzQJDk.js";import"./DeleteTwoTone-Cs8MA6bx.js";import"./CheckCircleTwoTone-DHO8WRy1.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
