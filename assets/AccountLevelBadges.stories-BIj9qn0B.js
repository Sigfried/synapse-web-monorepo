import{g as f}from"./userProfileHandlers-BbO4droc.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-D2RxTaJI.js";import{A}from"./AccountLevelBadges-DlTgHg9M.js";import"./VerificationSubmission-CDh9xETu.js";import"./index-BD3H3v2Q.js";import"./iframe-vVS2rzEM.js";import"./mockEntity-Dj5QUYTG.js";import"./mockFileEntity-CnXkiJeV.js";import"./StringUtils-_BY2npJD.js";import"./mock_file_handle-7frMWCuU.js";import"./mockProject-tFM4ffIZ.js";import"./mockTeam-oOzqbja7.js";import"./SynapseConstants-DpyvKWwy.js";import"./OrientationBanner--F7KvMIy.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-uFuhw4OO.js";import"./index-8LhlMaAL.js";import"./spreadSx-CwcO6WA9.js";import"./react-DrFvBr7z.js";import"./FullWidthAlert-COjSedMh.js";import"./Alert-CqM7RpyF.js";import"./createTheme-DcISy0Er.js";import"./DefaultPropsProvider-BOESIKWq.js";import"./useSlot-xSFdtJaR.js";import"./useForkRef-dia0gWc3.js";import"./createSimplePaletteValueFilter-C96j0NjE.js";import"./createSvgIcon-B1FaqnIo.js";import"./Close-8BXWfvpz.js";import"./IconButton-CAH4DZuh.js";import"./useTimeout-D7VY47uv.js";import"./ButtonBase-mnTGa1Up.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D_SbCuvi.js";import"./Paper-Cea3OSBq.js";import"./useTheme-DyN8hF8D.js";import"./useTheme-BFf0BJZH.js";import"./Stack-3iletvTY.js";import"./extendSxProp-BA4fMcfs.js";import"./getThemeProps-D1YqWO8D.js";import"./Box-ByQ3THaD.js";import"./AlertTitle-DDSq_pPK.js";import"./Typography-BAA8vQZq.js";import"./index-BXTCE0xi.js";import"./ClickAwayListener-QtBdg69m.js";import"./getReactElementRef-B4hCb5Fd.js";import"./index-Bb2Xwfgg.js";import"./index-ddPUxrWu.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-C2Br9vfw.js";import"./Tooltip-DuJxqYw7.js";import"./index-DJfWOGov.js";import"./useControlled-Cs8IfbLK.js";import"./Popper-CBn8VKqF.js";import"./Button-BHAJ2Z_p.js";import"./uniqueId-BTNdJyv8.js";import"./toString-D81B5GCj.js";import"./isArray-BXLcccwH.js";import"./isSymbol-BcGjl7-d.js";import"./times-DVLyYeSD.js";import"./_Uint8Array-DxeQg8t1.js";import"./identity-DKeuBCMA.js";import"./toInteger-D_y1ZyHe.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Bbvr4uoR.js";import"./QueryClientProvider-DzGkqokM.js";import"./Link-C7KgAVjw.js";import"./Collapse-PdzWHaop.js";import"./_baseUniq-CkQXKk7S.js";import"./_getTag-C65mJe3Y.js";import"./isEqual-CknqkHgG.js";import"./merge-DuQ3xWj9.js";import"./_initCloneObject-_ZaspZFt.js";import"./tinycolor-Begke6kS.js";import"./Fade-CP-enuzV.js";import"./inputBaseClasses-BpmNG699.js";import"./calculateFriendlyFileSize-myzlsBkP.js";import"./CheckCircleTwoTone-D-NBndjI.js";import"./InfoTwoTone-BETzQjtC.js";import"./useMutation-BNmou-VC.js";import"./dayjs.min-DY4lMLfY.js";import"./chunk-AYJ5UCUI-BP1nZeHW.js";import"./cloneDeep-CLLKKvZZ.js";import"./Skeleton-Cw5Zw2Ju.js";import"./AccountLevelBadge-DsmdU30E.js";import"./Card-CmNNQcpi.js";import"./ConfirmationDialog-DtiYkPYi.js";import"./DialogBase-TZ2O5fuo.js";import"./Close-C9LYoS_N.js";import"./HelpPopover-CaatVXKJ.js";import"./MarkdownPopover-B9TZb9rT.js";import"./LightTooltip-BWugc4Ok.js";import"./MarkdownSynapse-MQ7Piz_N.js";import"./SkeletonButton-DfMeTlOL.js";import"./SkeletonInlineBlock-D0S5W6IE.js";import"./SkeletonTable-C9AR-IYf.js";import"./SkeletonParagraph-CzmLW7WB.js";import"./HelpOutlineTwoTone-EvePXNUB.js";import"./DialogTitle-D51bLOZi.js";import"./DialogContent--S3u20N0.js";import"./Dialog-BVO8HQmx.js";import"./Modal-B_LcPMy5.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DvWmcmP8.js";import"./LoadingScreen-DQE4qnlB.js";import"./LinearProgress-ws5FNe8P.js";import"./ToastMessage-CGtsBYCr.js";import"./CSSTransition-CKdrKZVe.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
