import{j as l}from"./jsx-runtime-DEpgDH3F.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-23titnor.js";import{aH as S,M as a}from"./useFiles-CW2WvB5q.js";import"./OrientationBanner-x90lvp5Q.js";import"./index-m0hX9Cfg.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-BJulKkiO.js";import{S as E}from"./SynapseFormSubmissionGrid-BFRDTSCp.js";import"./mockSchema-DqaIutq3.js";import"./mockFileEntity-l5TjHP0L.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CU2lfPHh.js";import"./mockTeam-BSj11fAK.js";import"./SynapseConstants-DHLcK6Cl.js";import"./uniqueId-CD8qc3Ig.js";import"./toString-DcJ7vo62.js";import"./isObjectLike-DqqUbZUg.js";import"./iframe-RhhzCe2p.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Dx5j1ejd.js";import"./times-Edqj2RO0.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CUwFODu6.js";import"./asyncJobHandlers-B3-AMT3O.js";import"./BasicMockedCrudService-D8NaTSaC.js";import"./cloneDeep-ZNIdcS_l.js";import"./_Uint8Array-DPXbtihR.js";import"./_initCloneObject-Bq1Ewi6v.js";import"./_getTag-DllGCXi7.js";import"./isEqual-BINhF2ok.js";import"./_baseIsEqual-Dtf-gZmh.js";import"./mockAnnotationColumns-D4T4ukhD.js";import"./tableQueryHandlers-3l0xsuT2.js";import"./omit-Bln8OGfw.js";import"./_baseGet-DrEa1ySw.js";import"./isNil-BIw04r_q.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BykpBovu.js";import"./_baseFlatten-Cf8In_vL.js";import"./pick-DHbThxX3.js";import"./_baseSet-M3uPEV-k.js";import"./hasIn-C2HRRGAW.js";import"./accessRequirementAclHandlers-BMkDCw2q.js";import"./mockAccessRequirementAcls-qfJp8kiG.js";import"./mockAccessRequirements-kasZV_w0.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-jpJTQ5Zs.js";import"./wikiHandlers-DVodv_7v.js";import"./mockWikiPageKey-CWNJP_yG.js";import"./teamHandlers-DWm43RSm.js";import"./dataAccessRequestHandlers-DkfegVAZ.js";import"./MockResearchProject-CbZSbm8s.js";import"./mock_discussion-CyTTWKir.js";import"./fakerUtils-Du2wmbpM.js";import"./index-BlNZdxmJ.js";import"./mockTableEntity-BkbxdeWP.js";import"./mockFileEntityACLVariants-B1rFgSS8.js";import"./entityHandlers-DBufgQtr.js";import"./mockEntity-8eUbvraC.js";import"./mockEvaluationQueue-D9hWSucf.js";import"./featureFlagHandlers-BhoSyywd.js";import"./fileHandlers-DY2DKQEp.js";import"./personalAccessTokenHandlers-C7i23l6s.js";import"./researchProjectHandlers-DTEG8P9Z.js";import"./resetTwoFactorAuthHandlers-GpzRL0Jl.js";import"./userProfileHandlers-BllcpFZ1.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-B64lSD2e.js";import"./FullWidthAlert-BfF2jnNw.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Bdo27us9.js";import"./createTheme-CSzdSY-V.js";import"./resolveComponentProps-N0vzRaOo.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DPX00GGI.js";import"./createSvgIcon-m840DBqW.js";import"./DefaultPropsProvider-Bn3Qc-rH.js";import"./Close-MctOBndY.js";import"./IconButton-Bx4BiJAK.js";import"./ButtonBase-W_UD1Bpy.js";import"./useTimeout-D-E23KMP.js";import"./useIsFocusVisible-DC8iz6bu.js";import"./useEventCallback-C_04HCUY.js";import"./Paper-Dy3qs9pY.js";import"./Stack-EaJGjrE1.js";import"./getThemeProps-clCUPg1L.js";import"./useTheme-GwDaMkRG.js";import"./Box-DVOL3_Ou.js";import"./AlertTitle-CXUIGOlq.js";import"./Typography-CVtBATTm.js";import"./useTheme-CHMqaA9I.js";import"./Grow-CNqvpTzc.js";import"./index-Ca65W0Fa.js";import"./utils-i2zvE6ou.js";import"./ClickAwayListener-DVDMFSyb.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DiB1aYnn.js";import"./index-iUVuohCb.js";import"./useControlled-Dk2GOyol.js";import"./useId-CgnZS89Q.js";import"./Popper-Bjgq8VFo.js";import"./Button-B-cDVbK4.js";import"./useQuery-BNmwjDfg.js";import"./utils-DaYLeMd3.js";import"./Link-s6GvuJP2.js";import"./Collapse-BHZlT1ft.js";import"./tinycolor-Begke6kS.js";import"./Fade-CVasAILZ.js";import"./Skeleton-D3H3ZNsc.js";import"./inputBaseClasses-0mjZ40CH.js";import"./calculateFriendlyFileSize-DZsi_k-d.js";import"./CheckCircleTwoTone-D8WEqQ0X.js";import"./InfoTwoTone-DO5ngNf_.js";import"./mutation-C7eGZbkU.js";import"./dayjs.min-BVePriSU.js";import"./chunk-AYJ5UCUI-CIz2hU_u.js";import"./index-CeqUUOCL.js";import"./react-DansrzNM.js";import"./util-BWQe-Euq.js";import"./WideButton-CcVIajyu.js";import"./DeleteTwoTone-CHmuzB3p.js";import"./createSvgIcon-Cjwsa9Ec.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-vnmiFikY.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-D7aKH6eb.js";import"./DialogBase-CYi8E2-z.js";import"./Close-D6sPtkuO.js";import"./HelpPopover-DOFFMrPZ.js";import"./MarkdownPopover-DEMrYoaR.js";import"./LightTooltip-DhAETPAM.js";import"./MarkdownSynapse-CEjKu14q.js";import"./SkeletonButton-CpygWO8D.js";import"./SkeletonInlineBlock-DO4Ybz4L.js";import"./SkeletonTable-DkDLYAK1.js";import"./SkeletonParagraph-CIRgMLdM.js";import"./HelpOutlineTwoTone-CnuagsBK.js";import"./DialogTitle-Dx61b4l1.js";import"./DialogContent-BDufOROT.js";import"./Dialog-yGohb-_7.js";import"./Modal-eO_M3hZP.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BvqCvwKR.js";import"./WarningDialog-0-bbHBR8.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
