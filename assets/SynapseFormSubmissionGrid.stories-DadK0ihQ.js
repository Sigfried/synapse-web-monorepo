import{j as l}from"./jsx-runtime-De_JaTsA.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-CztHY9Cb.js";import{aD as S,M as a}from"./useFiles-BzuLnGGc.js";import"./OrientationBanner-CnC2SIQN.js";import"./index-FUM3L0KY.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-DtryYeu1.js";import{S as E}from"./SynapseFormSubmissionGrid-DZ6XAcE4.js";import"./mockSchema-BkBAPOno.js";import"./mockFileEntity-mql8QMQ2.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CO5Dlv8e.js";import"./mockTeam-Bhefe753.js";import"./SynapseConstants-sMbXWwfe.js";import"./uniqueId-BJo-66JY.js";import"./toString-DcyiFRRR.js";import"./isObjectLike-MqwAe9ah.js";import"./iframe-CkTEIcLN.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BCuNKqxV.js";import"./times-CbUACoiI.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-B2IjSTkh.js";import"./asyncJobHandlers-CN95wPvV.js";import"./BasicMockedCrudService-Bt7WGYDq.js";import"./cloneDeep-DJexZskY.js";import"./_Uint8Array-ClQza9X0.js";import"./_initCloneObject-C2pocUvF.js";import"./_getTag-DoTwoFzg.js";import"./isEqual-DgMOeKgK.js";import"./_baseIsEqual-sng2O-Z0.js";import"./mockAnnotationColumns-C59kTooQ.js";import"./tableQueryHandlers-Deb7uIKj.js";import"./omit-DLsEB48q.js";import"./_baseGet-JFV5fUDp.js";import"./isNil-Ck0SKkrW.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-B8QdKTmr.js";import"./_baseFlatten-Ba3QHv37.js";import"./pick-EjmlROcQ.js";import"./_baseSet-Ccba2NF1.js";import"./hasIn-C5AC0xIV.js";import"./accessRequirementAclHandlers-BL3F5w7Y.js";import"./mockAccessRequirementAcls-BP_C6Kyc.js";import"./mockAccessRequirements-BlO1Gm5D.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-Vw5vKP_H.js";import"./wikiHandlers-Da4t-wir.js";import"./mockWikiPageKey-Bca8AAvX.js";import"./teamHandlers-D6Ll3SZf.js";import"./dataAccessRequestHandlers-CKpAQPhq.js";import"./MockResearchProject-0-8xFmjr.js";import"./mock_discussion-BAcEavr2.js";import"./fakerUtils-C09iDbmg.js";import"./index-CjJXvZf2.js";import"./mockTableEntity-DnG3BGbm.js";import"./mockFileEntityACLVariants-LhfDOVof.js";import"./entityHandlers-QOWDRPn6.js";import"./mockEntity-Bclu0Z-w.js";import"./mockEvaluationQueue-BsOeQ3dB.js";import"./featureFlagHandlers-CTPh5C2v.js";import"./fileHandlers-B87vkP7t.js";import"./personalAccessTokenHandlers-D6YixKNV.js";import"./researchProjectHandlers-CPPYg_UM.js";import"./resetTwoFactorAuthHandlers-Du6UtMF8.js";import"./userProfileHandlers-CL-LbNw7.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BRLLOd7j.js";import"./FullWidthAlert-CAJkbiLP.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-5VkYTIBF.js";import"./createTheme-BBb2Qd0k.js";import"./resolveComponentProps-R8z4BWTp.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BVSPsf4B.js";import"./createSvgIcon-DNCe27og.js";import"./DefaultPropsProvider-QkIf3scQ.js";import"./Close-ByZxOjfW.js";import"./IconButton-CA4qHLSV.js";import"./ButtonBase-DK4l9V-m.js";import"./useTimeout-DdVZCjoC.js";import"./useIsFocusVisible-di1_3BQ1.js";import"./useEventCallback-DTa4qX08.js";import"./Paper-CoaPjD7K.js";import"./Stack-CSj8ihvo.js";import"./getThemeProps-DcZNirAa.js";import"./useTheme-Cp5DXRZd.js";import"./Box-CegU9d-3.js";import"./AlertTitle-gnqszYL6.js";import"./Typography-CLLhs0L1.js";import"./useTheme-diod1Kbp.js";import"./Grow-DmjrUlN0.js";import"./index-DmKSybck.js";import"./utils-DRf_PMFC.js";import"./ClickAwayListener-CpE4sba6.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BG7b4JUi.js";import"./index-BK3UAGGB.js";import"./useControlled-DdQOallM.js";import"./useId-BfNqUIzo.js";import"./Popper-Cf4Bm97n.js";import"./Button-CudPxp8O.js";import"./useQuery-Wxp7w0WJ.js";import"./utils-Ddq-63Ac.js";import"./Link-h1slAJsz.js";import"./Collapse-Bjf4I9C7.js";import"./tinycolor-Begke6kS.js";import"./Fade-DUJqXcRr.js";import"./Skeleton-BNf-hkpj.js";import"./inputBaseClasses-6eMeEajo.js";import"./calculateFriendlyFileSize-DaOvYdEu.js";import"./CheckCircleTwoTone-BP8SCnpc.js";import"./InfoTwoTone-Mzj3-rYe.js";import"./mutation-DJKBGDEz.js";import"./dayjs.min-BwyXMe8U.js";import"./chunk-AYJ5UCUI-DKSXcXN_.js";import"./index-DCFUrok1.js";import"./react-CNv5dFVC.js";import"./util-D_-ygjRI.js";import"./WideButton-DI7mcsB0.js";import"./DeleteTwoTone-cWHSe3ry.js";import"./createSvgIcon-rm-5kgR6.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DaoK1k8T.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Ds5QipFp.js";import"./DialogBase-BsPb8sOU.js";import"./Close-CD-sEKpt.js";import"./HelpPopover-qtCo2g_-.js";import"./MarkdownPopover-DddpyVy3.js";import"./LightTooltip-DMEZpmor.js";import"./MarkdownSynapse-LgfqspBM.js";import"./useMutation-BhU5kn1I.js";import"./SkeletonButton-BOSKsWFN.js";import"./SkeletonInlineBlock-Coj5aEwS.js";import"./SkeletonTable-DQe8vEYw.js";import"./SkeletonParagraph-C1kZgXRx.js";import"./HelpOutlineTwoTone-DD5Uq8ZA.js";import"./DialogTitle-8Ygsejdo.js";import"./DialogContent-BIjlsosP.js";import"./Dialog-DRgIDgRs.js";import"./Modal-B3pmpCj3.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BTPNPIJM.js";import"./WarningDialog-DCDkcW8e.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
