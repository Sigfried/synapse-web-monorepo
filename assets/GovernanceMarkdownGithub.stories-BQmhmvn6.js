import{v as o}from"./VerificationSubmission-CDh9xETu.js";import{g as u,be as d,bf as l,B as f,bg as S,M as O}from"./useFiles-YucZATxL.js";import"./StringUtils-CsrYFBZo.js";import{h as i,H as n}from"./index-BsEpSnpB.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DzS0h2Tw.js";import"./SynapseConstants-CHkxdRry.js";import"./OrientationBanner-CtuY7B3Q.js";import"./index-B4H032Ee.js";import"./index-CfEEtDn-.js";import"./iframe-CeiLikyN.js";import"./spreadSx-CwcO6WA9.js";import"./react-BiTVYxab.js";import"./FullWidthAlert-D7gKcLIi.js";import"./Alert-D6I9wCdA.js";import"./createTheme-BYBhZ90H.js";import"./DefaultPropsProvider-Bswpx5pd.js";import"./useSlot-Zw2FAHzA.js";import"./useForkRef-BlTCc_CH.js";import"./createSimplePaletteValueFilter-BffxQsy8.js";import"./createSvgIcon-BJynCVHb.js";import"./Close-BJyFUdii.js";import"./IconButton-C0wRUMPU.js";import"./useTimeout-nJnRXNH2.js";import"./ButtonBase-D2pBkCG_.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Dm1g36zT.js";import"./Paper-lzsRapQ4.js";import"./useTheme-DSh-GIdr.js";import"./useTheme-B42Ifzl5.js";import"./Stack-eloqJUe4.js";import"./extendSxProp-tX7DDs58.js";import"./getThemeProps-B6i4Z5qV.js";import"./Box-aEOCia2P.js";import"./AlertTitle-B4f_T2ic.js";import"./Typography-CpUMHtoK.js";import"./index-D8hSBzLi.js";import"./ClickAwayListener-DdglBFhh.js";import"./getReactElementRef-VnkVAZfw.js";import"./index-DbyqPCQY.js";import"./index-Nr7jvwBe.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BSsKISFN.js";import"./Tooltip-DNev14xt.js";import"./index-BYxs3Y7Q.js";import"./useControlled-BCBFc8lh.js";import"./Popper-CHMKrk2R.js";import"./Button-DGx3VH4d.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-IyjoWcnv.js";import"./QueryClientProvider-BD5pf-RH.js";import"./Link-C55LcHue.js";import"./Collapse-iVhkQxy5.js";import"./_baseUniq-CnC8bR6e.js";import"./_Uint8Array-CgIBXC-3.js";import"./isArray-Cwm0fXX5.js";import"./_getTag-DJBssibo.js";import"./isEqual-Rgn5hfNp.js";import"./merge-5PlmDVuz.js";import"./_initCloneObject-CUAPy4I3.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CSbHexZD.js";import"./inputBaseClasses-eOiKmm0Y.js";import"./calculateFriendlyFileSize-eINF_BE7.js";import"./CheckCircleTwoTone-HCtxMS01.js";import"./InfoTwoTone-oRP_P5t6.js";import"./useMutation-BgDA__ug.js";import"./dayjs.min-DtOxUw9u.js";import"./chunk-AYJ5UCUI-q5nTStrd.js";import"./cloneDeep-BjmLMQDs.js";import"./Skeleton-Dl-3MnIl.js";import"./SkeletonButton-R1zUCVqZ.js";import"./SkeletonInlineBlock-DCa72A27.js";import"./SkeletonTable-C8xz3SAI.js";import"./times-BUk2ejcA.js";import"./toInteger-B9Po1hqd.js";import"./isSymbol-B9uQz8nP.js";import"./SkeletonParagraph-C5BncfPU.js";import"./MarkdownSynapse-CsCATTcm.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
