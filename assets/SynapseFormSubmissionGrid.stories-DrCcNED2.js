import{j as l}from"./jsx-runtime-Cs1Fm0Q_.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-DT5e7pXu.js";import{aF as S,M as a}from"./useFiles-gvDYdVA3.js";import"./OrientationBanner-DaN6Irh3.js";import"./index-Db1aP9ty.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-CIOokMIv.js";import{S as E}from"./SynapseFormSubmissionGrid-5cuyRNGb.js";import"./mockSchema-BsDYSiet.js";import"./mockFileEntity-C6U2jtjx.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-DY10B9gQ.js";import"./mockTeam-BJz9a6NO.js";import"./SynapseConstants-BOEEbE5z.js";import"./uniqueId-DVAEz2la.js";import"./toString-BNyohXvq.js";import"./isObjectLike-BlmGdpA5.js";import"./iframe-C5lT__ek.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CKET-AwX.js";import"./times-Dx0FZLo_.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-ByjR_2Am.js";import"./asyncJobHandlers-Cydx29a7.js";import"./BasicMockedCrudService-BomcEjnP.js";import"./cloneDeep-BqqcJMwR.js";import"./_Uint8Array-C9jAmEtM.js";import"./_initCloneObject-CdE5DMia.js";import"./_getTag-Cx2cUrPB.js";import"./isEqual-C-dfyVGC.js";import"./_baseIsEqual-aR5FLVd6.js";import"./mockAnnotationColumns-DXveEdw3.js";import"./tableQueryHandlers-O5szGY4y.js";import"./omit-KlgisvSS.js";import"./_baseGet-a1vH3vr1.js";import"./isNil-eOpbZUHs.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-S9zuy3HO.js";import"./_baseFlatten-CeaLc2ZS.js";import"./pick--DA_9B1p.js";import"./_baseSet-CZSwoihl.js";import"./hasIn-DeOfrYWF.js";import"./accessRequirementAclHandlers-Bi4tQZrs.js";import"./mockAccessRequirementAcls-PSDgixBm.js";import"./mockAccessRequirements-C8ZN4QBD.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-BxaDte2D.js";import"./wikiHandlers-YgEHejkw.js";import"./mockWikiPageKey-CXtRtt7Z.js";import"./teamHandlers-KGAslu3q.js";import"./dataAccessRequestHandlers-BubJrJ4D.js";import"./MockResearchProject-CVk_XB7g.js";import"./mock_discussion-CjX1xS6Q.js";import"./fakerUtils-Di-gzNfE.js";import"./index-C4ty_hzs.js";import"./mockTableEntity-Ce2TkeGM.js";import"./mockFileEntityACLVariants-tM69Zlob.js";import"./entityHandlers-BT7sg-6l.js";import"./mockEntity-Cp37NsWs.js";import"./mockEvaluationQueue-BMZXb3zz.js";import"./featureFlagHandlers-QC6YxvL6.js";import"./fileHandlers-WnW4hxIe.js";import"./personalAccessTokenHandlers-DONOdZ8J.js";import"./researchProjectHandlers-CcqWlpLo.js";import"./resetTwoFactorAuthHandlers-DjPpUBJm.js";import"./userProfileHandlers-Df4UPcBu.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Bor-fIph.js";import"./FullWidthAlert-CyHne0WE.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CvH-iF0j.js";import"./createTheme-BYAR0roU.js";import"./resolveComponentProps-DU0yQU8D.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-f649aIMN.js";import"./createSvgIcon-BBECu-CZ.js";import"./DefaultPropsProvider-B4N9tHv5.js";import"./Close-jtAOUy3a.js";import"./IconButton-MgFsq3Qp.js";import"./ButtonBase-1yfoM0v4.js";import"./useTimeout-Cwz68jOI.js";import"./useIsFocusVisible-CZNW8M1E.js";import"./useEventCallback-BnZeVV8R.js";import"./Paper-CwETWs6D.js";import"./Stack-D_q6vVZo.js";import"./getThemeProps-CqFzaKNY.js";import"./useTheme-dlpDLMey.js";import"./Box-CzdISfgC.js";import"./AlertTitle-CDlSTnNI.js";import"./Typography-CFeqm_pk.js";import"./useTheme-Cyk6t4Pw.js";import"./Grow-D9NcZaD6.js";import"./index-7KXtlYZP.js";import"./utils-D_4Bd554.js";import"./ClickAwayListener-CeEnSstO.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CL57psWl.js";import"./index-BLj0f06q.js";import"./useControlled-p7PHHKFc.js";import"./useId-BfukPzZy.js";import"./Popper-DbB6cLNI.js";import"./Button-DTUlPADQ.js";import"./useQuery-D-yjlNHL.js";import"./utils-Byeg5SVy.js";import"./Link-Df2IM3EH.js";import"./Collapse-IyxkSILO.js";import"./tinycolor-Begke6kS.js";import"./Fade--uzSCevD.js";import"./Skeleton-BHysQAaR.js";import"./inputBaseClasses-C6SMswco.js";import"./calculateFriendlyFileSize-CRKqCfH9.js";import"./CheckCircleTwoTone-DunUbOgq.js";import"./InfoTwoTone-DXXg4Vn0.js";import"./useMutation-DntL3od1.js";import"./dayjs.min-CPrxBA1-.js";import"./chunk-AYJ5UCUI-eHpqnHZR.js";import"./index-CZRTEMmG.js";import"./react-XNDnr9l0.js";import"./util-Cn7BXlus.js";import"./WideButton-BwDA1-78.js";import"./DeleteTwoTone-BIVZYqsg.js";import"./createSvgIcon-C1tS8b8H.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-hECFaZsc.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CJQ0q75-.js";import"./DialogBase-Ca_4EXIp.js";import"./Close-DCIfqg8i.js";import"./HelpPopover-DyJSl_T6.js";import"./MarkdownPopover-BTl9dkfa.js";import"./LightTooltip-BbzThINR.js";import"./MarkdownSynapse-DJ-HoorQ.js";import"./SkeletonButton-CSFK2sKQ.js";import"./SkeletonInlineBlock-CZOeSRQh.js";import"./SkeletonTable-WvAZ_RLB.js";import"./SkeletonParagraph-JUYdX4ZD.js";import"./HelpOutlineTwoTone-B_D-ZRKZ.js";import"./DialogTitle-BuMKGPg-.js";import"./DialogContent-YxcoRmtQ.js";import"./Dialog-BjCemQbs.js";import"./Modal-Bm8c_gxm.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Q-fBWNmq.js";import"./WarningDialog-lPozxfbc.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
