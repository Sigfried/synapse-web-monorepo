import{u as o}from"./VerificationSubmission-CNoSrCdk.js";import{g as u,bb as d,bc as l,B as S,bd as f,M as O}from"./useFiles-C8aQpBuK.js";import"./StringUtils-BmiE0y30.js";import{h as i,H as n}from"./index-CjlO8uSO.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DO-mnOKE.js";import"./SynapseConstants-LoOoxdQk.js";import"./OrientationBanner-DnWa3KZR.js";import"./index-BTbZfs8l.js";import"./index-De4Vv_ep.js";import"./iframe-DP_p86Fr.js";import"./spreadSx-CwcO6WA9.js";import"./react-CvcSvn3N.js";import"./FullWidthAlert-B1bmpnoz.js";import"./Alert-ImJ2zA2h.js";import"./createTheme-Cl04QxaQ.js";import"./DefaultPropsProvider-DNVH8Q7H.js";import"./useSlot-9TuXo1TP.js";import"./useForkRef-DyxKigHw.js";import"./createSimplePaletteValueFilter-CAYe3Rue.js";import"./createSvgIcon-UhBJEK2m.js";import"./Close-DrGm7x9h.js";import"./IconButton-BrOXuM54.js";import"./useTimeout-C1rH1Mb8.js";import"./ButtonBase-Bt45AdWc.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CcLuLv7k.js";import"./Paper-xpb-M21W.js";import"./useTheme-Dzl3VF2s.js";import"./useTheme-CuK-3kUg.js";import"./Stack-wmh67js0.js";import"./extendSxProp--23Be16A.js";import"./getThemeProps-CYZXDLF1.js";import"./Box-DK7J9yVx.js";import"./AlertTitle-Dannj8RE.js";import"./Typography-Ds7IcOV5.js";import"./index-Cs8C-foY.js";import"./ClickAwayListener-D9QrBCa_.js";import"./getReactElementRef-BWogjx2X.js";import"./index-DnWKxMkf.js";import"./index-1ePaVzDW.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DNxMyI4G.js";import"./Tooltip-46IfHOwJ.js";import"./index-Cy0AQVxt.js";import"./useControlled-D28NdV_e.js";import"./Popper-BO47mkUH.js";import"./Button-BgPTHZB3.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-xxp2qEXD.js";import"./QueryClientProvider-CFJhNNlT.js";import"./Link-Afhwye1e.js";import"./Collapse-DYoU144f.js";import"./_baseUniq-CUIsXlb-.js";import"./_Uint8Array-GyCL5Pu8.js";import"./isArray-COc2CsW7.js";import"./_getTag-DbL-g0ol.js";import"./isEqual-GICyo1PA.js";import"./merge-CKfySH-i.js";import"./_initCloneObject-B5vwtLAe.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-9lzgbzWx.js";import"./inputBaseClasses-C5rUd-9c.js";import"./calculateFriendlyFileSize-BpOIWUNe.js";import"./CheckCircleTwoTone-vxhtSqn6.js";import"./InfoTwoTone-BTyuxo2O.js";import"./useMutation-aj2WqP2W.js";import"./dayjs.min-DPikuq5T.js";import"./chunk-AYJ5UCUI-QNrvc1uN.js";import"./cloneDeep-yukOHxQ_.js";import"./Skeleton-ZE-byRxm.js";import"./SkeletonButton-D4LAsERN.js";import"./SkeletonInlineBlock-z37sE5E4.js";import"./SkeletonTable-Y_C4XlP4.js";import"./times-DrDm8Cj2.js";import"./toInteger-D7XvGivD.js";import"./isSymbol-B3KGB0-s.js";import"./SkeletonParagraph-BiJWV-HL.js";import"./MarkdownSynapse-BpFoxn9H.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
