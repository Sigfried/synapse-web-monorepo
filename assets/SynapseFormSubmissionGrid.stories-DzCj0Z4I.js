import{j as l}from"./jsx-runtime-CFZZRYFG.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-CkGHgvW8.js";import{aH as S,M as a}from"./useFiles-DCBhVcX4.js";import"./OrientationBanner-BtiT6WyN.js";import"./index-CmCUkCd9.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-2wpkyPsJ.js";import{S as E}from"./SynapseFormSubmissionGrid-CYs34Tsk.js";import"./mockSchema-VPR0Ah8v.js";import"./mockFileEntity-C_kjRT69.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CNvU5cuv.js";import"./mockTeam-BHa5iH5I.js";import"./SynapseConstants-B_idJdcO.js";import"./uniqueId-CY6GBina.js";import"./toString-BDD9EO3t.js";import"./isObjectLike-DDBuYJ3d.js";import"./iframe-DXUfJBdf.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-MM_c-QCu.js";import"./times-CavtmMDE.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-D_Aq-I22.js";import"./asyncJobHandlers-CaY1Mhd_.js";import"./BasicMockedCrudService-Dinhhkox.js";import"./cloneDeep-Xhqb0M60.js";import"./_Uint8Array-D1I-i-dP.js";import"./_initCloneObject-Gnwcby4L.js";import"./_getTag-B11ixrYo.js";import"./isEqual-CJUlgp5r.js";import"./_baseIsEqual-BWIgJpCv.js";import"./mockAnnotationColumns-Cfbd-v_l.js";import"./tableQueryHandlers-Bzz3vUS6.js";import"./omit-Crh-CsJx.js";import"./_baseGet-DqlE1sCQ.js";import"./isNil-DWzEB8NU.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CvQK415G.js";import"./_baseFlatten-DJ6rmTMj.js";import"./pick-BlMdsiHW.js";import"./_baseSet-h-ZPr7wu.js";import"./hasIn-BU0ne3a_.js";import"./accessRequirementAclHandlers-C5Pc0otw.js";import"./mockAccessRequirementAcls-D-xtjsZd.js";import"./mockAccessRequirements-CrzHW8pl.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-3fRobGXB.js";import"./wikiHandlers-BhCcu5jO.js";import"./mockWikiPageKey-BjbDfH3g.js";import"./teamHandlers-Ctw5dxLa.js";import"./dataAccessRequestHandlers-CBZPB-jJ.js";import"./MockResearchProject-C5bYMXla.js";import"./mock_discussion-BMFBtrJg.js";import"./fakerUtils-BjezTw7L.js";import"./index-JH6YDuLe.js";import"./mockTableEntity-DuOKEltM.js";import"./mockFileEntityACLVariants-CHK9epa4.js";import"./entityHandlers-M83wB7dF.js";import"./mockEntity-Dnhppl8J.js";import"./mockEvaluationQueue-CtZycgBj.js";import"./featureFlagHandlers-DMR6R9xA.js";import"./fileHandlers-C7p_wRVI.js";import"./personalAccessTokenHandlers-Bvx7Nbmr.js";import"./researchProjectHandlers-D7-XqLet.js";import"./resetTwoFactorAuthHandlers-BvLHsq8-.js";import"./userProfileHandlers-BPaJyg4U.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-C9F6V3Yz.js";import"./FullWidthAlert-x3y8LsLN.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BPHE9Hju.js";import"./createTheme-CHfP_t0e.js";import"./resolveComponentProps-PkI8AyU0.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CFunQua-.js";import"./createSvgIcon-DnU1pd2f.js";import"./DefaultPropsProvider-CZnwKgLd.js";import"./Close-D6qK5x2m.js";import"./IconButton-Cd_zXKUl.js";import"./ButtonBase-BMkCnani.js";import"./useTimeout-hzSm_0Oa.js";import"./useIsFocusVisible-DVMn6XNm.js";import"./useEventCallback-C7J5BY2m.js";import"./Paper-CI0vY15i.js";import"./Stack-6HIV7RqQ.js";import"./getThemeProps-DU9HcCJp.js";import"./useTheme-BYfeOBJi.js";import"./Box-kh8mcmt0.js";import"./AlertTitle-b3dm2gDy.js";import"./Typography-C-s0R9UO.js";import"./useTheme--1DXCEB1.js";import"./Grow-9tCBOIoh.js";import"./index-D4kY4W0g.js";import"./utils-fDxAjJ23.js";import"./ClickAwayListener-DcVM7uDx.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-B3PAM7-1.js";import"./index-Ottmp0Ws.js";import"./useControlled-DFTLdBN3.js";import"./useId-DeBqTlHG.js";import"./Popper-9m_sKk7A.js";import"./Button-Ce9e_xUX.js";import"./useQuery-DOTBOawS.js";import"./utils-BAODLjNl.js";import"./Link-0pF3GYhv.js";import"./Collapse-D9wcYZLT.js";import"./tinycolor-Begke6kS.js";import"./Fade-CLPKfRn2.js";import"./Skeleton-CeMgLxgp.js";import"./inputBaseClasses-DHoR8lQM.js";import"./calculateFriendlyFileSize-DRpF2bJh.js";import"./CheckCircleTwoTone-0CFO99fd.js";import"./InfoTwoTone-BYvW9hgT.js";import"./mutation-CyobqbjF.js";import"./dayjs.min-CNXXNmCY.js";import"./chunk-AYJ5UCUI-DwJwYJ4t.js";import"./index-DFrT5rDs.js";import"./react-BnvVcGfR.js";import"./util-BZKZA8jx.js";import"./WideButton-BT2bkuYY.js";import"./DeleteTwoTone-BZ5r3PUC.js";import"./createSvgIcon-CCatLR2Z.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CW-jRaLo.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DOrZl0mz.js";import"./DialogBase-C9YeW29a.js";import"./Close-JekyyBYT.js";import"./HelpPopover-sT9dXgva.js";import"./MarkdownPopover-BOgaDeTa.js";import"./LightTooltip-DG6PkX_X.js";import"./MarkdownSynapse-9QLMOnGF.js";import"./SkeletonButton-Bnv-IIDn.js";import"./SkeletonInlineBlock-Dve3xHDA.js";import"./SkeletonTable-ndDNyNGn.js";import"./SkeletonParagraph-DAubrqBM.js";import"./HelpOutlineTwoTone-DWyWmUzK.js";import"./DialogTitle-C8u02itm.js";import"./DialogContent-BZQLNYZb.js";import"./Dialog-DSF6bJSO.js";import"./Modal-EhUmHjJ7.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Bfmua3AJ.js";import"./WarningDialog-Ds5RWqlw.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
